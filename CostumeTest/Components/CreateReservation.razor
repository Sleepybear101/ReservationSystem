@using Microsoft.AspNetCore.Components.Web
@using System.Diagnostics
@using System.Data;
@using ReservationGuest.Models;
@using System.Globalization;
@using System.Net.Mail;

@using Microsoft.JSInterop;
@inject IJSRuntime JsRuntime;

<div>
    <div class="stepwizard">
        <div class="stepwizard-row">
            <div class="stepwizard-step">
                <button id="Step1" type="button" class="  btn-progges"><p>1</p></button>
                <p>Gegevens</p>
            </div>
            <div class="stepwizard-step">
                <button id="Step2" type="button" class="steps-circle btn-circle"><p>2</p></button>
                <p>Datum</p>
            </div>
            <div class="stepwizard-step">
                <button id="Step3" type="button" class="steps-circle btn-circle"><p>3</p></button>
                <p>Dagdeel</p>
            </div>
            <div class="stepwizard-step">
                <button id="Step4" type="button" class="steps-circle btn-circle"><p>4</p></button>
                <p>Tafel</p>
            </div>
            <div class="stepwizard-step">
                <button id="Step5" type="button" class="steps-circle  btn-circle"><p>5</p></button>
                <p>Overzicht</p>
            </div>
        </div>
    </div>
</div>

<form id="form1">
    <div id="div1" class="divs" >
        <h2>Gegevens</h2>
        <div class="formInfo">
            <div class="form-inline  form-group">
                <label for="Name">Volledig naam</label>
                <input type="text" class="form-controls Field-Name" @bind="CreateGuest.FullName" aria-describedby="FullName" placeholder="Volledige naam" required />
            </div>
            <div class="form-inline form-group ">
                <label for="Email">Email      </label>
                <input type="email" class="form-controls Field-Email" @bind="CreateGuest.Email" aria-describedby="emailHelp" placeholder="Email adres" required />

            </div>
            <div class="form-inline  form-group">
                <label for="InputAmount">Aantal personen</label>
                <input type="number" class="form-control Field-Amount" @bind="CreateRes.Amount" aria-describedby="Amount" placeholder="0" min="1" max="6" required />
            </div>
        </div>
        <button type="button" @onclick="CheckBlockedOrNotFilled" class="btn btn-primary" style="float:right">Volgende </button>
    </div>
</form>



<form method="post">
    <div id="div2" class="divs CHidden">
            <div class="Form-date">
                <h2>Datum</h2>
                <div style=" margin-left: 23px;">
                    <div>
                    <div>
                        <input type="date" id="txtDate"  @bind="CreateRes.date" onkeydown="return false" class="input-group-addon date-div unstyled form-control" max=2025-01-1 />
                    </div>
               
                    <button type="button" @onclick="(e => NextOrLastDiv(false, 2))" class="btn btn-primary" style="float:left">
                        terug
                    </button>
                    <button type="button" @onclick="CheckDateTime" class="btn btn-primary" style="float:right">Volgende </button>
                </div>
            </div>
        </div>
     </div>
</form>

<form method="post">
    <div id="div3" class="divs CHidden">
        <div class="div-daypart">
            <h2>Dagdeel</h2>

            <div class="form-daypart">
                <button type="button" @onclick="(e => SelectedDaypart(false))" class="btn Daypart-btn form-daypart-btn-lunch">
                    <h5>Lunch</h5>
                    <p>11:00 - 16:00</p>
                </button>
                <button type="button" @onclick="(e => SelectedDaypart(true))" class="btn Daypart-btn  form-daypart-btn-diner">
                    <h5>Dinner</h5>
                    <p>17:00 - 20:00</p>
                </button>
            </div>
            <button type="button" @onclick="(e => NextOrLastDiv(false, 3))" class="btn btn-primary" style="float:left">
                terug
            </button>
            <button type="button" @onclick="CheckDaypart" class="btn btn-primary" style="float:right">Volgende </button>
        </div>

    </div>
</form>
<form>
    <div id="div4" class="divs CHidden TableGroupDIV">
        <h2>Tafel kiezen</h2>
        <div id="NormalDay" class=" table-setting card-group" >
            <div class="TableGroupOne">

                <button id="Table1" type="button" @onclick="(e => SelectedTable(1))"  class="Table TableWitFour btn btn-primary">
                    1
                </button>

                <button id="Table2" type="button" @onclick="(e => SelectedTable(2))"  class="Table  TableWitFour btn btn-primary">
                    2
                </button>
                <button id="Table3" type="button" @onclick="(e => SelectedTable(3))"  class="Table TableWitFour btn btn-primary">
                    3
                </button>
            </div>

            <div class="TableGroupTwo" >
                <button id="Table4" type="button" class="Table TableWitSix  btn btn-primary" @onclick="(e => SelectedTable(4))">
                    4
                </button>
            </div>

            <div class="TableGroupThree">
                <button id="Table6" type="button" @onclick="(e => SelectedTable(6))" class="Table TableWitTwo btn btn-primary">6</button>
                <button id="Table5" type="button" @onclick="(e => SelectedTable(5))"  class="Table TableWitTwo  btn btn-primary">5</button>
            </div>

            <div class="TableGroupFourth">
                <button id="Table8" type="button" @onclick="(e => SelectedTable(8))"  class=" Table TableWitFour btn btn-primary">
                    8
                </button>
                <button id="Table10" type="button" @onclick="(e => SelectedTable(10))"  class=" Table TableWitFour btn btn-primary">
                    10
                </button>
                <button id="Table11" type="button" @onclick="(e => SelectedTable(11))"  class="Table TableWitSix  btn btn-primary">
                    11
                </button>
            </div>
            <div  class="TableGroupFifth" >
                <button id="Table7" type="button" @onclick="(e => SelectedTable(7))" class="Table TableWitFour btn btn-primary">
                    7
                </button>
                <button id="Table9" type="button" @onclick="(e => SelectedTable(9))"  class="Table TableWitFour  btn btn-primary">
                    9
                </button>
            </div>

        </div>

        <div id="Valday" class="  table-setting TableGroupDIV  card-group">

            <div style="margin-left: 19%; margin-top: 3%;">
                <div style="width: 24%; height: 16px; ">
                    <button id="Table1" type="button"  @onclick="(e => SelectedTable(1))" style="width: 34px;height: 36px;  margin-left: 19px;  margin-right: 33px;  margin-top: 17%;" class=" Table TableWitTwo btn btn-primary">
                        1
                    </button>
                    <button id="Table2" type="button" @onclick="(e => SelectedTable(2))" style="width: 34px;height: 36px;margin-left: 19px;margin-right: 33px;margin-top: 8%;" class=" Table TableWitTwo btn btn-primary">
                        2
                    </button>

                </div>
                <div style=" margin-left: 91px;">
                    <button id="Table3" type="button"  @onclick="(e => SelectedTable(3)) "style="width: 47px;  height: 57px; margin-left: 10px;   margin-right: 33px; " class="Table TableWitFour btn btn-primary">
                        3
                    </button>

                    <button id="Table4" type="button" @onclick="(e => SelectedTable(4))" style="width: 47px;   height: 57px; margin-left: 14px;   margin-right: 33px; " class="Table TableWitFour btn btn-primary">
                        4
                    </button>
                    <button id="Table5" type="button" @onclick="(e => SelectedTable(5))" style="width: 47px; height: 57px; margin-left: 9px;   margin-right: 33px; " class="Table TableWitFour btn btn-primary">
                        5
                    </button>
                </div>
            </div>

            <div style="padding-left: 50%; height: 7%; margin-top: 6%;">
                <button id="Table8" type="button"  @onclick="(e => SelectedTable(8))" style="width: 33px;height: 35px;margin-right: 44px;" class="Table TableWitTwo btn btn-primary">8</button>
                <button id="Table7" type="button"  @onclick="(e => SelectedTable(7))" style="width: 32px;height: 35px;margin-right: 44px;" class="Table TableWitTwo  btn btn-primary">7</button>
                <button id="Table6" type="button"  @onclick="(e => SelectedTable(6))" style="width: 33px;height: 35px;" class="Table TableWitTwo  btn btn-primary">6</button>
            </div>

            <div style="width: 11%; margin-bottom: 24%;  margin-top: 8%;">
                <button id="Table11" type="button"  @onclick="(e => SelectedTable(11))" style="width: 36px;height: 35px;margin-left: 6px;margin-right: 33px;margin-top: 39%;padding-left: 7px;padding-top: 5px;" class=" Table TableWitTwo btn btn-primary">
                    11
                </button>
                <button id="Table14" type="button" @onclick="(e => SelectedTable(14))" style="width: 36px;height: 35px;margin-left: 6px;margin-right: 33px;margin-top: 90%;padding-left: 7px;padding-top: 5px;" class=" Table TableWitTwo btn btn-primary">
                    14
                </button>
                <button id="Table16" type="button" @onclick="(e => SelectedTable(16))" style=" width: 36px;height: 35px;margin-left: 6px;margin-right: 33px;margin-top: 100%;padding-left: 8px;padding-top: 5px;" class="Table TableWitTwo  btn btn-primary">
                    16
                </button>
            </div>

            <div style="width:16%; margin-bottom: 24%;  margin-top: 10%;">
                <button id="Table10" type="button"  @onclick="(e => SelectedTable(10))" style="width: 34px;height: 36px;margin-left: 1px;margin-right: 33px;margin-top: 14%;padding-left: 7px;padding-top: 5px; " class=" Table TableWitTwo btn btn-primary">
                    10
                </button>
                <button id="Table13" type="button"   @onclick="(e => SelectedTable(13))" style="width: 35px;height: 36px; margin-right: 33px;margin-top: 62%;padding-left: 7px;padding-top: 5px;" class=" Table TableWitTwo btn btn-primary">
                    13
                </button>
                <button id="Table15" type="button"  @onclick="(e => SelectedTable(15))" style="width: 35px;height: 37px;margin-left: 1px;margin-right: 33px;margin-top: 67%;padding-left: 7px;padding-top: 5px;" class="Table TableWitTwo  btn btn-primary">
                    15
                </button>
            </div>
            <div style="  width: 19%; ">
                <button id="Table9" type="button"  @onclick="(e => SelectedTable(9))" style="width: 58px;height: 46px;margin-left: 7px;margin-right: 6px;margin-top: 24%;" class="Table TableWitFour btn btn-primary">
                    9
                </button>
                <button id="Table12" type="button"  @onclick="(e => SelectedTable(12))" style=" width: 59px;height: 45px;margin-left: 7px;margin-right: 33px;margin-top: 60%;" class="Table TableWitFour  btn btn-primary">
                    12
                </button>
            </div>
        </div>
        <button type="button" @onclick="(e => NextOrLastDiv(false, 4))" class=" button-back btn btn-primary" style="float:left">
            terug
        </button>
        <div class="WhichMeaning">
            <button class="GWhichMeaning" />
            <p>Beschikbaar</p>
            <button class="DWhichMeaning" />
            <p> Niet beschikbaar</p>
            <button class="RWhichMeaning" />
            <p> Bezet</p>
        </div>
        <button type="button" @onclick="CheckTable" class="btn btn-primary" style="float:right">Volgende </button>
    </div>
</form>

<form>
    <div id="div5" class="divs CHidden">
        <div id="divOverview">
            <h2> Overzicht</h2>
            <div id="formOverview">
                <div class="form-inline  form-group">
                    <label for="Datum" class="label">Datum: </label>

                    <input type="text" class="form-controls  date-field" @bind="DateInText" required disabled />
                </div>
                <div class="form-inline form-group ">
                    <label for="Dagdeel" class="label">Dagdeel:</label>

                    <input class="form-controls Daypart-field" value="@DayPart" required disabled />
                </div>
                <div class="form-inline form-group  ">
                    <label for="Dagdeel" class="label">Naam:</label>

                    <input type="text" class="form-controls name-field" value="@CreateGuest.FullName" required disabled />
                </div>
                <div class="form-inline form-group ">
                    <label for="Dagdeel" class="label">E-mail:</label>

                    <input type="email" class="form-controls Email-field" value="@CreateGuest.Email" required disabled />
                </div>
                <div class="form-inline form-group ">
                    <label for="Dagdeel" class="label">Aantal personen:</label>

                    <input type="number" class="form-controls amount-field" value="@CreateRes.Amount" required disabled />
                </div>
                <div class="form-inline form-group ">
                    <label for="Dagdeel" class="label">Tafel:</label>

                    <input type="number" class="form-controls table-field" value="@CreateRes.Table" required disabled />
                </div>
            </div>
            <button type="button" @onclick="(e => NextOrLastDiv(false, 5))" class="btn btn-primary" style="float:left">
                terug
            </button>

            <button @onclick="CheckDoubleUser" type="button" class="btn btn-primary" style="float:right">
                Reservering
            </button>
        </div>
    </div>
</form>



@code{

    SqlConnection con = new SqlConnection();
    public string Message;
    Reservation CreateRes = new Reservation();
    Guest CreateGuest = new Guest();
    public int TableNummerReserved;

    [Parameter]
    public string DateInText { get; set; }
    public string DayPart { get; set; }



    // Kijkt of de terug of volgende knop is gedrukt
    async Task NextOrLastDiv(bool NextOrLastDiv, int FormqClicked)
    {
        // als de NextOrLastDiv false wordt de javascript function LastDiv gebruikt anders  function NextDiv gebruikt
        if (NextOrLastDiv == false)
        {
            await JsRuntime.InvokeVoidAsync("LastDiv", FormqClicked);

            //Info legen terug
            if (FormqClicked == 2 || FormqClicked == 4)
            {
                CreateRes.Daypart = "";
            }
            else if (FormqClicked == 3 || FormqClicked == 5)
            {
                CreateRes.Table = 0;
                CreateRes.Daypart = "";

            }

        }
        else
        {
            // checkt of de email correct om de function NextDiv gebruiken
            if (IsValidEmail(CreateGuest.Email) != false)
            {
                await JsRuntime.InvokeVoidAsync("NextDiv", FormqClicked);
            }
        }
    }

    //Gereserveerd Tafel
    async Task DisabledReserved(int Tableres)
    {
        await JsRuntime.InvokeVoidAsync("DisabledReserved", Tableres);
    }

    //Wanneer aantal personen
    async Task LessThenSixFourOrTwo()
    {
        await JsRuntime.InvokeVoidAsync("Disabled", CreateRes.Amount);
    }

    //alles van de tafels of stappen worden teruggezet
    async Task ResetTableOrSteps(string subject)
    {
        if (subject == "ResetTables")
        {
            await JsRuntime.InvokeVoidAsync("ResetTables");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("ResetSteps");
        }
    }

    async Task WholDayPart()
    {
        await JsRuntime.InvokeVoidAsync("HoldValue", CreateRes.Daypart);
    }


    // Kijkt of de terug of volgende knop is gedrukt
    async Task GetMessage(string subject)
    {
        if (subject == "Succes")
        {
            await JsRuntime.InvokeVoidAsync("Message", subject);

        }
        else if (subject == "Blocked")
        {
            await JsRuntime.InvokeVoidAsync("Message", subject);

        }
        else if (subject == "Chosen")
        {
            await JsRuntime.InvokeVoidAsync("Message", subject);

        }
        else if (subject == "Email")
        {
            await JsRuntime.InvokeVoidAsync("Message", subject);

        }
        else if(subject == "Time")
        {
            await JsRuntime.InvokeVoidAsync("Message", subject);
        }
    }

    //Kijkt naar welke datum is gekozen
    async Task CheckWhichDate()
    {
        await JsRuntime.InvokeVoidAsync("WhichDate", CreateRes.date.ToString("yyyy-MM-dd"));
    }

    //Pakt de dagdeel die voorbij is gegaan
    async Task CheckDateTime(string Daypart)
    {
        await JsRuntime.InvokeVoidAsync("WhichDaypart", Daypart);
    }

    //Kijkt of de tijd van de datum al na een dagdeel is om een dagdeel te blokkeren 
    void  CheckDateTime()
    {
        DateTime Choosingdate = CreateRes.date.Date;
        DateTime CurrentTime  = DateTime.Now;
        TimeSpan timeLunch = new TimeSpan(11, 0, 0);
        TimeSpan timeDinner = new TimeSpan(17, 0, 0);
        DateTime DeadlineLunch = Choosingdate.Add(timeLunch);
        DateTime DeadlineDinner = Choosingdate.Add(timeDinner);

        double TotalBetweenLunch = (DeadlineLunch - CurrentTime).TotalHours;
        double TotalBetweenDinner = (DeadlineDinner - CurrentTime).TotalHours;

        if ( TotalBetweenLunch < 3 )
        {
            CheckDateTime("Lunch");
        }

        if (TotalBetweenDinner < 3)
        {
            CheckDateTime("Dinner");
        }

        GuestLastday();
        NextOrLastDiv(true, 2);
    }

    //Pakt de dagdeel van zelfde dag 
    void GuestLastday()
    {
        con.SqlQuery("SELECT reservation.DayPart FROM reservation INNER JOIN guest ON reservation.Guest = guest.id_Guest WHERE reservation.Date =@Date AND guest.FullName =@Name AND guest.Email=@Mail ");
        con.Cmd.Parameters.AddWithValue("@Date", CreateRes.date.ToString("yyyy-MM-dd"));
        con.Cmd.Parameters.AddWithValue("@Name", CreateGuest.FullName);
        con.Cmd.Parameters.AddWithValue("@Mail", CreateGuest.Email);

        foreach (DataRow dr in con.QueryEx().Rows)
        {
            CheckDateTime(dr[0].ToString());
        }
    }

    //Dagdeel gekozen
    void CheckDaypart()
    {
        if (CreateRes.Daypart == "" || CreateRes.Daypart == null)
        {
            GetMessage("Chosen");
        }
        else
        {

            ResetTableOrSteps("ResetTables");
            CheckWhichDate();
            ReserveTable();
            LessThenSixFourOrTwo();
            NextOrLastDiv(true, 3);
        }
    }

    //Tafel gekozen
    void CheckTable()
    {
        if (CreateRes.Table == 0 )
        {
            GetMessage("Chosen");
        }
        else
        {
            NextOrLastDiv(true, 4);
        }
    }


    //Check of mail correct is anders stuurt de
    bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }

    //Kijkt of veld wel gevuld of gekozen zijn en verder kan naar volgende form
    void CheckBlockedOrNotFilled()
    {
        if (CreateGuest.FullName == null || CreateRes.Amount == 0  || CreateGuest.FullName == "")
        {
            GetMessage("Chosen");
        }
        else if (IsValidEmail(CreateGuest.Email) == false)
        {
            GetMessage("Email");
        }
        else if (CreateRes.Amount > 6 || CreateRes.Amount < 1)
        {
            GetMessage("Chosen");
        }
        else
        {
            con.SqlQuery("SELECT Count(`IsBlocked`) FROM `guest` WHERE `Email`=@Email AND `IsBlocked`=1");
            con.Cmd.Parameters.AddWithValue("@Email", CreateGuest.Email);
            foreach (DataRow dr in con.QueryEx().Rows)
            {
                CreateGuest.IsBlocked = Convert.ToInt32(dr[0].ToString());
            }
            if (CreateGuest.IsBlocked >= 1)
            {
                GetMessage("Blocked");
            }
            else
            {
                NextOrLastDiv(true, 1);
            }

        }
    }

    //Pak de waarde van geselecteerd Tafel
    void SelectedTable(int SelectedTable)
    {
        CreateRes.Table = SelectedTable;
        Message = "Tafel Nummer gekozen" + CreateRes.Table.ToString();
        Debug.WriteLine(Message);
    }

    //Pak de waarde van geselecteerd dagdeel
    void SelectedDaypart(bool SelectedDaypart)
    {
        if (SelectedDaypart == false)
        {
            CreateRes.Daypart = "Lunch";
            DayPart = "Lunch 11:00 - 16:00";
        }
        else
        {
            CreateRes.Daypart = "Dinner";
            DayPart = "Dinner 17:00 - 20:00";

        }

        CultureInfo ci = new CultureInfo("nl-NL");
        var month = DateTime.Now.ToString("dddd, dd MMMM yyyy", ci);
        DateInText = month;

        WholDayPart();
    }

    //Zet de tafels naar gereserveerd
    void ReserveTable()
    {
        con.SqlQuery("SELECT `TableNumber` FROM `reservation` WHERE `Date`=@Date  AND `DayPart`=@Daypart");
        con.Cmd.Parameters.AddWithValue("@Date", CreateRes.date.ToString("yyyy-MM-dd"));
        con.Cmd.Parameters.AddWithValue("@Daypart", CreateRes.Daypart);
        foreach (DataRow dr in con.QueryEx().Rows)
        {
            TableNummerReserved = Convert.ToInt32(dr[0].ToString());
            DisabledReserved(TableNummerReserved);
        }
    }

    //Check naar dubble gast gegevens
    void CheckDoubleUser()
    {
        if (CreateGuest.Email == "" || CreateGuest.FullName == ""|| CreateRes.Daypart == "" || CreateRes.date == null || CreateRes.Amount == null)
        {
            GetMessage("Chosen");
        }
        else
        {
            con.SqlQuery("SELECT `id_Guest` FROM `guest` WHERE `FullName`=@Fullname AND `Email`=@Email");
            con.Cmd.Parameters.AddWithValue("@Fullname", CreateGuest.FullName);
            con.Cmd.Parameters.AddWithValue("@Email", CreateGuest.Email);
            foreach (DataRow dr in con.QueryEx().Rows)
            {

                CreateGuest.id = Convert.ToInt32(dr[0].ToString());
            }

            if (CreateGuest.id == 0)
            {
                InsertUser();
            }
            else
            {
                InsertReservation();
            }
        }

    }

    //Zet Gast neer in database
    void InsertUser()
    {
        con.SqlQuery("INSERT INTO `guest`(`FullName`, `Email`,`NoShow`,`IsBlocked`) VALUES (@Fullname,@Email,0,0)");
        con.Cmd.Parameters.AddWithValue("@Fullname", CreateGuest.FullName);
        con.Cmd.Parameters.AddWithValue("@Email", CreateGuest.Email);
        con.NonQueryEx();
        CheckDoubleUser();

    }

    //Zet Gast neer in database
    void InsertReservation()
    {
        con.SqlQuery("INSERT INTO `reservation`(`Date`, `DayPart`, `TableNumber`, `Guest`, `Amount`,`IsConfirm`) VALUES (@Date,@Daypart,@TableNumber,@Guest,@Amount,'Nee')");
        con.Cmd.Parameters.AddWithValue("@Date", CreateRes.date);
        con.Cmd.Parameters.AddWithValue("@Daypart", CreateRes.Daypart);
        con.Cmd.Parameters.AddWithValue("@TableNumber", CreateRes.Table);
        con.Cmd.Parameters.AddWithValue("@Guest", CreateGuest.id);
        con.Cmd.Parameters.AddWithValue("@Amount", CreateRes.Amount);
        con.NonQueryEx();

        GetMessage("Succes");
        sendMail();
        ResetTableOrSteps("Steps");
        NextOrLastDiv(true, 0);

        CreateGuest.Email = null;
        CreateGuest.FullName = null;
        CreateRes.Amount = 0;
        CreateRes.Daypart = "";
        CreateRes.date = DateTime.Today;
    }

    //Verstuurd mail naar gast met bevestiging link
    public void sendMail()
    {
        con.SqlQuery("SELECT `id_Reservation` FROM `reservation` WHERE `Guest`=@Guest AND `Date`=@Date AND `DayPart`=@Daypart AND `TableNumber`=@TableNumber");
        con.Cmd.Parameters.AddWithValue("@Guest", CreateGuest.id.ToString());
        con.Cmd.Parameters.AddWithValue("@Date", CreateRes.date.ToString("yyyy-MM-dd"));
        con.Cmd.Parameters.AddWithValue("@Daypart", CreateRes.Daypart);
        con.Cmd.Parameters.AddWithValue("@TableNumber", CreateRes.Table);
        con.QueryEx();

        foreach (DataRow dr in con.QueryEx().Rows)
        {
            CreateRes.id = Convert.ToInt32(dr[0].ToString());
        }

        string messageone = "Er is een reservering gemaakt. Klik op de link om de reservering te bevestigen.";
        string Link = "https://reserveringsysteem.azurewebsites.net/Confirm?GetGuestid=" + CreateGuest.id + "&GetRes=" + CreateRes.id;
        string messagetwo = " Als u niet wilt reserveren of dit niet het geval is negeer dan deze mail.";
        string EndMail = "Alvast bedankt voor uw reserveringen ";
        string htmlBody = @"<html lang=""en"">
                                <head>    
                                    <meta content=""text/html; charset=utf-8"" http-equiv=""Content-Type"">
                                    <title>
                                        Upcoming topics
                                    </title>
                                    <style type=""text/css"">
                                        HTML{background-color: #e8e8e8;}   
                                        .message{background-color: #ffff; font-weight: 400;  font-size: 16px; padding: 2% 18% 4% 18%;}
                                        .courses-table{font-size: 12px; padding: 3px; border:0; cellspacing:0; cellpadding:0; border-spacing: 0;}
                                        .TitleMessage{ padding-left: 29%; font-size: 33px; color: #354052;}
                                        .courses-table th{color: #354052;text-align: left; padding: 1% 1%;}    
                                        .side-Right-Left{background-color: #F3F3F3; padding: 0 1%;}
                                        .BacKColor{background-color: #F3F3F3;}
                                        .EndMessage{ background-color: #F3F3F3; color: #354052; font-size: 25px;   padding-left: 32%;  padding-right: 36%;  font-weight: 700;  text-align: center;}
                                    </style>
                                </head>
                                <body>
                                    <table class=""courses-table"">
                                        <thead>
                                            <tr>
                                                <th class=""BacKColor""></th>
                                                <th class=""BacKColor""></th>
                                                <th class=""BacKColor""></th>

                                            </tr>
                                        </thead>           
                                        <tbody>
                                        <tr>
                                          <td class=BacKColor></td>
                                          <td class=TitleMessage>Bevestigen van reservering</td>
                                          <td class=BacKColor></td>
                                      </tr>
                                            <tr>
                                                <td class=""side-Right-Left""><td class=""message"">" + messageone + "<br><a href=" + Link + ">Bevestig</a><br>" + messagetwo + "</td><td class=side-Right-Left> </td> </td> " +
                                          "</tr> " +
                                       "</tbody> " +
                                 " <tfoot> " +
                                    "<tr>" +
                                      " <td class=BacKColor></td>" +
                                      " <td class=EndMessage>"+EndMail+"</td>" +
                                      " <td class=BacKColor></td>" +
                                   " </tr> " +
                                 "</tfoot>" +
                                "</body> " +
                              "</html>";



        string subject = "Bevestigen van reservering!";
        MailMessage mailMessage = new MailMessage("reserveringsysteem2@gmail.com", CreateGuest.Email ,subject,htmlBody);
        mailMessage.IsBodyHtml = true;

        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com");
        smtpClient.Port = 587;
        smtpClient.Credentials = new System.Net.NetworkCredential("reserveringsysteem2@gmail.com", "TestRes1!@");
        smtpClient.EnableSsl = true;
        smtpClient.Send(mailMessage);
  
    }
}
