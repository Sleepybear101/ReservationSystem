#pragma checksum "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8b0df8dd20476ecaab33ee8142370590c7d077d6"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ReservationAdmin.Component
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using System.Diagnostics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ReservationAdmin.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.ChartJS.BarChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.ChartJS.BarChart.Axes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.ChartJS.Common.Axes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.ChartJS.Common.Axes.Ticks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.ChartJS.Common.Properties;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.ChartJS.Common.Wrappers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using ChartJs.Blazor.Util;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
    public class GetMonthReservation : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 56 "C:\Users\wurud\Documents\GitHub\ReservationSystem\ReservationAdmin\Component\GetMonthReservation.razor"
 

    private BarConfig _barChartConfig;
    private ChartJsBarChart _barChart;
    private BarDataset<DoubleWrapper> _barDataVoorspelling;
    private BarDataset<DoubleWrapper> _barDataSetWerkelijk;
    SqlConnection con = new SqlConnection();
    List<double> Result = new List<double>();
    [Parameter]
    public int Month { get; set; } = 1;
    public string Chose { get; set; }

    public int LastYear = DateTime.Now.Year - 1;
    public int SecondYear = DateTime.Now.Year - 2;
    public int ThirdYear = DateTime.Now.Year - 3;
    public int FourthYear = DateTime.Now.Year - 4;
    public int FifthYear = DateTime.Now.Year - 5;
    public int year = DateTime.Now.Year;

    //De grafiek wordt neergezet
    protected override void OnInitialized()
    {
        SetBarChart();
        GetFutureYear();
    }

    //informatie over de grafiek 
    public void SetBarChart()
    {
        _barChartConfig = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Statiek - Aantal reserveringen"

                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
            {
                    new BarCategoryAxis
                    {
                    BarPercentage = 0.8,
                    BarThickness = BarThickness.Flex
                    }
                    },
                    YAxes = new List<CartesianAxis>
                {
                        new BarLinearCartesianAxis
                        {
                        Ticks = new LinearCartesianTicks
                        {
                        BeginAtZero = true
                        }
                        }
                        }
                }
            }
        };
        _barDataVoorspelling = new BarDataset<DoubleWrapper>
        {
            Label = "Voorspelling",
            BackgroundColor = "#A3A1FB",
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };

        _barDataSetWerkelijk = new BarDataset<DoubleWrapper>
        {
            Label = "Werkelijk",
            BackgroundColor = "#56D9FE",
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };
    }
    //Welke keuze is gemaakt
    public void GetChoose(ChangeEventArgs e)
    {
        RemoveData();
        Chose = e.Value.ToString();
        if (Chose == "Year")
        {
            GetFutureYear();
            DisOrVisMonth("Dis");
        }
        else
        {
            SetLastMonth();
            DisOrVisMonth("Vis");
        }

    }

   //of de maand selector zichtbaar moet zijn 
   async Task DisOrVisMonth(string Subject)
   {
        await JsRuntime.InvokeVoidAsync("MonthSelector", Subject);
   }

    //Pakt de waarde van de maand 
    public void GetChooseWhichMonth(ChangeEventArgs e)
    {
        RemoveData();
        Month = Convert.ToInt32(e.Value);
        SetLastMonth();
    }

    //Zet de waarde neer van de jaar
    public void GetWhichYear(ChangeEventArgs e)
    {
        RemoveData();
        year = Convert.ToInt32(e.Value);
        SetLastMonth();
    }


    //Verwijderd de oude waarde in de grafiek
    private async Task RemoveData()
    {
        for (int i = 1; i < 31; i++)
        {
            if (_barChartConfig.Data.Labels.Count > 0)
            {

                _barChartConfig.Data.Labels.RemoveAt(_barChartConfig.Data.Labels.Count - 1);
            }

            if (_barDataVoorspelling.Data.Count > 0)
            {
                _barDataVoorspelling.RemoveAt(_barDataVoorspelling.Data.Count - 1);
            }

            if (_barDataSetWerkelijk.Data.Count > 0)
            {
                _barDataSetWerkelijk.RemoveAt(_barDataSetWerkelijk.Data.Count - 1);
            }
        }
    }

    //refresh de grafiek met nieuw informatie
    private async Task AddData()
    {
        await _barChart.Update();
    }

    //zet de waarde neer van de gekozen maand
    public void SetLastMonth()
    {

        for (int i = 1; i < 31; i++)
        {
            con.SqlQuery("SELECT COUNT(*)  FROM `reservation` WHERE `Date` = '" + year + "-" + Month + "-" + i + "'");
            con.QueryEx();
            foreach (DataRow dr in con.QueryEx().Rows)
            {
                string maand = i.ToString() + ",";
                _barDataSetWerkelijk.AddRange(new double[] { Convert.ToDouble(dr[0]) }.Wrap());
            }
        }
        for (int i = 1; i < 31; i++)
        {
            con.SqlQuery("SELECT ROUND((year1.Total1+year2.Total2+year3.Total3+year4.Total4+year5.Total5)/5) FROM (" +
            " (SELECT COUNT(*) as Total1 FROM `reservation` WHERE `Date`='" + SecondYear + "-" + Month + "-" + i + "') year1," +
            " (SELECT COUNT(*) as Total2 FROM `reservation` WHERE `Date`='" + LastYear + "-" + Month + "-" + i + "') year2," +
            "(SELECT COUNT(*) as Total3 FROM `reservation` WHERE `Date` = '" + ThirdYear + "-" + Month + "-" + i + "') year3," +
            "(SELECT COUNT(*) as Total4 FROM `reservation` WHERE `Date` ='" + FourthYear + "-" + Month + "-" + i + "') year4," +
            "(SELECT COUNT(*) as Total5 FROM `reservation` WHERE `Date` = '" + FifthYear + "-" + Month + "-" + i + "') year5)");
            con.QueryEx();
            foreach (DataRow dr in con.QueryEx().Rows)
            {

                _barDataVoorspelling.AddRange(new double[] { Convert.ToDouble(dr[0]) }.Wrap());
            }
        }

        _barChartConfig.Data.Labels.AddRange(new[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "24", "25", "26", "27", "28", "29", "30", "31" });
        _barChartConfig.Data.Datasets.Add(_barDataSetWerkelijk);

        AddData();
    }

    //Zet de voorspelling van de jaar
    public void GetFutureYear()
    {
        _barChartConfig.Data.Labels.AddRange(new[] { "Jan", "Feb", "Maart", "April", "Mei", "Juni", "Juli", "August", "September", "Oktober", "November", "Decemeber" });

        for (int i = 1; i < 13; i++)
        {
            con.SqlQuery("SELECT ROUND((year1.Total1+year2.Total2+year3.Total3+year4.Total4+year5.Total5)/5) FROM (" +
            " (SELECT COUNT(*) as Total1 FROM `reservation` WHERE `Date` BETWEEN '" + SecondYear + "-" + i + "-1' AND '2018-" + i + "-31') year1," +
            " (SELECT COUNT(*) as Total2 FROM `reservation` WHERE `Date` BETWEEN '" + LastYear + "-" + i + "-1'AND '2019-" + i + "-31') year2," +
            "(SELECT COUNT(*) as Total3 FROM `reservation` WHERE `Date` BETWEEN '" + ThirdYear + "-" + i + "-1'AND '2017-" + i + "-31') year3," +
            "(SELECT COUNT(*) as Total4 FROM `reservation` WHERE `Date` BETWEEN '" + FourthYear + "-" + i + "-1'AND '2016-" + i + "-31') year4," +
            "(SELECT COUNT(*) as Total5 FROM `reservation` WHERE `Date` BETWEEN '" + FifthYear + "-" + i + "-1'AND '2015-" + i + "-31') year5)");
            con.QueryEx();
            foreach (DataRow dr in con.QueryEx().Rows)
            {

                _barDataVoorspelling.AddRange(new double[] { Convert.ToDouble(dr[0]) }.Wrap());
            }
        }

        for (int i = 1; i < 13; i++)
        {
            con.SqlQuery("SELECT COUNT(*) FROM `reservation` WHERE  `Date` BETWEEN '" + year + "-" + i + "-1' AND '2020-" + i + "-31'");
            con.QueryEx();
            foreach (DataRow dr in con.QueryEx().Rows)
            {
                _barDataSetWerkelijk.AddRange(new double[] { Convert.ToDouble(dr[0]) }.Wrap());
            }
        }
        _barChartConfig.Data.Datasets.Add(_barDataVoorspelling);
        _barChartConfig.Data.Datasets.Add(_barDataSetWerkelijk);
        AddData();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
    }
}
#pragma warning restore 1591
