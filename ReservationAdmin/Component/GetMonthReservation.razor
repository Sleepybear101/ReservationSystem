@using Microsoft.AspNetCore.Components.Web
@using System.Diagnostics
@using System.Data;
@using ReservationAdmin.Models;
@using System.Globalization;
@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.BarChart.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.Common.Wrappers
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.Util

@using System.Linq;

@using Microsoft.JSInterop;
@inject IJSRuntime JsRuntime;
    <div class="selectors">
        <select @onchange="(e => GetChoose(e))">
            <option value="Year">Jaar</option>
            <option value="Month">Maand</option>
        </select>

        <select @onchange="(e => GetChooseWhichMonth(e))" class="SelectorMonth CHidden">
            <option value="01">Jan</option>
            <option value="02">Feb</option>
            <option value="03">Maart</option>
            <option value="04">April</option>
            <option value="05">Mei</option>
            <option value="06">Juni</option>
            <option value="07">Juli</option>
            <option value="08">August</option>
            <option value="09">Sept</option>
            <option value="10">Okt</option>
            <option value="11">Nov</option>
            <option value="12">Dec</option>

        </select>

        <select @onchange="(e => GetWhichYear(e))">
            <option value="2020">2020</option>
            <option value="2019">2019</option>
            <option value="2018">2018</option>
            <option value="2017">2017</option>
            <option value="2016">2016</option>
            <option value="2015">2015</option>

        </select>
    </div>


<ChartJsBarChart @ref="_barChart" Config="@_barChartConfig" Width="700" Height="300" />



@code
{

    private BarConfig _barChartConfig;
    private ChartJsBarChart _barChart;
    private BarDataset<DoubleWrapper> _barDataVoorspelling;
    private BarDataset<DoubleWrapper> _barDataSetWerkelijk;
    SqlConnection con = new SqlConnection();
    List<double> Result = new List<double>();
    [Parameter]
    public int Month { get; set; } = 1;
    public string Chose { get; set; } = "Year";


    //De grafiek wordt neergezet
    protected override void OnInitialized()
    {
        SetBarChart();
        GetFutureYear();
    }

    //informatie over de grafiek 
    public void SetBarChart()
    {
        _barChartConfig = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Statiek - Aantal reserveringen"

                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
            {
                    new BarCategoryAxis
                    {
                    BarPercentage = 0.8,
                    BarThickness = BarThickness.Flex
                    }
                    },
                    YAxes = new List<CartesianAxis>
                {
                        new BarLinearCartesianAxis
                        {
                        Ticks = new LinearCartesianTicks
                        {
                        BeginAtZero = true
                        }
                        }
                        }
                }
            }
        };
        _barDataVoorspelling = new BarDataset<DoubleWrapper>
        {
            Label = "Voorspelling",
            BackgroundColor = "#A3A1FB",
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };

        _barDataSetWerkelijk = new BarDataset<DoubleWrapper>
        {
            Label = "Werkelijk",
            BackgroundColor = "#56D9FE",
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff"
        };
    }
    //Welke keuze is gemaakt
    public void GetChoose(ChangeEventArgs e)
    {
        RemoveData();
        Chose = e.Value.ToString();
        if (Chose == "Year")
        {
            GetFutureYear();
            DisOrVisMonth("Dis");
        }
        else
        {
            SetLastMonth();
            DisOrVisMonth("Vis");
        }

    }

    //of de maand selector zichtbaar moet zijn 
    async Task DisOrVisMonth(string Subject)
    {
        await JsRuntime.InvokeVoidAsync("MonthSelector", Subject);
    }

    //Pakt de waarde van de maand 
    public void GetChooseWhichMonth(ChangeEventArgs e)
    {
        RemoveData();
        Month = Convert.ToInt32(e.Value);
        SetLastMonth();
    }

    public int year = DateTime.Now.Year;
    //Zet de waarde neer van de jaar
    public void GetWhichYear(ChangeEventArgs e)
    {
        RemoveData();
        year = Convert.ToInt32(e.Value);
        if (Chose == "Year")
        {
            GetFutureYear();
        }
        else
        {
            SetLastMonth();
        }
    }


    //Verwijderd de oude waarde in de grafiek
    private async Task RemoveData()
    {
        for (int i = 1; i < 50; i++)
        {
            if (_barChartConfig.Data.Labels.Count > 0)
            {

                _barChartConfig.Data.Labels.RemoveAt(_barChartConfig.Data.Labels.Count - 1);
            }

            if (_barDataVoorspelling.Data.Count > 0)
            {
                _barDataVoorspelling.RemoveAt(_barDataVoorspelling.Data.Count - 1);
            }

            if (_barDataSetWerkelijk.Data.Count > 0)
            {
                _barDataSetWerkelijk.RemoveAt(_barDataSetWerkelijk.Data.Count - 1);
            }
        }
    }

    //refresh de grafiek met nieuw informatie
    private async Task AddData()
    {
        await _barChart.Update();
    }

    //zet de waarde neer van de gekozen maand
    public void SetLastMonth()
    {


        con.SqlQuery("SELECT DAY(date),Round(count(id_Reservation)) FROM `reservation` WHERE month(`Date`)="+Month+" AND YEAR(`Date`)="+year+" GROUP BY 1 ORDER BY 1");
        con.QueryEx();
        foreach (DataRow dr in con.QueryEx().Rows)
        {
            _barDataSetWerkelijk.AddRange(new double[] { Convert.ToDouble(dr[1]) }.Wrap());
        }


        con.SqlQuery("SELECT DAY(date),Round(count(id_Reservation)/5) FROM `reservation` WHERE month(`Date`) = "+Month+" AND YEAR(date) < YEAR(CURRENT_DATE()) GROUP BY 1 ORDER BY 1");
        con.QueryEx();
        foreach (DataRow drs in con.QueryEx().Rows)
        {
            _barDataVoorspelling.AddRange(new double[] { Convert.ToDouble(drs[1]) }.Wrap());
        }
        _barChartConfig.Data.Labels.AddRange(new[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "24", "25", "26", "27", "28", "29", "30", "31" });
        _barChartConfig.Data.Datasets.Add(_barDataSetWerkelijk);

        AddData();
    }

    //Zet de voorspelling van de jaar
    public void GetFutureYear()
    {
        _barChartConfig.Data.Labels.AddRange(new[] { "Jan", "Feb", "Maart", "April", "Mei", "Juni", "Juli", "August", "September", "Oktober", "November", "Decemeber" });

        con.SqlQuery("SELECT month(date),Round(count(id_Reservation)/5) FROM reservation WHERE YEAR(date) < YEAR(CURRENT_DATE()) GROUP BY 1 ORDER BY 1");
        con.QueryEx();
        foreach (DataRow dr in con.QueryEx().Rows)
        {
            _barDataVoorspelling.AddRange(new double[] { Convert.ToDouble(dr[1])}.Wrap());

        }

        con.SqlQuery("SELECT month(date),Round(COUNT(id_Reservation)) FROM reservation WHERE YEAR(date)="+year+" GROUP BY 1 ORDER BY 1");
        con.QueryEx();
        foreach (DataRow drs in con.QueryEx().Rows)
        {
            _barDataSetWerkelijk.AddRange(new double[] { Convert.ToDouble(drs[1]) }.Wrap());
        }

        _barChartConfig.Data.Datasets.Add(_barDataVoorspelling);
        _barChartConfig.Data.Datasets.Add(_barDataSetWerkelijk);
        AddData();
    }
}
